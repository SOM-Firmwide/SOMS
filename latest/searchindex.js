Search.setIndex({"docnames": ["api", "api/generated/soms.datastructures.Area", "api/generated/soms.datastructures.Area.ToString", "api/generated/soms.datastructures.Area.boolean_difference", "api/generated/soms.datastructures.Area.boolean_intersection", "api/generated/soms.datastructures.Area.boolean_symmetric_difference", "api/generated/soms.datastructures.Area.boolean_union", "api/generated/soms.datastructures.Area.compute_aabb", "api/generated/soms.datastructures.Area.compute_obb", "api/generated/soms.datastructures.Area.copy", "api/generated/soms.datastructures.Area.from_json", "api/generated/soms.datastructures.Area.from_jsonstring", "api/generated/soms.datastructures.Area.from_rectangle", "api/generated/soms.datastructures.Area.from_sides_and_radius_xy", "api/generated/soms.datastructures.Area.rotate", "api/generated/soms.datastructures.Area.rotated", "api/generated/soms.datastructures.Area.scale", "api/generated/soms.datastructures.Area.scaled", "api/generated/soms.datastructures.Area.sha256", "api/generated/soms.datastructures.Area.to_brep", "api/generated/soms.datastructures.Area.to_json", "api/generated/soms.datastructures.Area.to_jsonstring", "api/generated/soms.datastructures.Area.to_mesh", "api/generated/soms.datastructures.Area.to_vertices_and_faces", "api/generated/soms.datastructures.Area.transform", "api/generated/soms.datastructures.Area.transformed", "api/generated/soms.datastructures.Area.translate", "api/generated/soms.datastructures.Area.translated", "api/generated/soms.datastructures.Area.validate_data", "api/generated/soms.datastructures.Frame", "api/generated/soms.datastructures.Frame.ToString", "api/generated/soms.datastructures.Frame.aabb", "api/generated/soms.datastructures.Frame.closest_point", "api/generated/soms.datastructures.Frame.compute_aabb", "api/generated/soms.datastructures.Frame.compute_obb", "api/generated/soms.datastructures.Frame.copy", "api/generated/soms.datastructures.Frame.curvature_at", "api/generated/soms.datastructures.Frame.divide_by_count", "api/generated/soms.datastructures.Frame.divide_by_length", "api/generated/soms.datastructures.Frame.fair", "api/generated/soms.datastructures.Frame.frame_at", "api/generated/soms.datastructures.Frame.from_json", "api/generated/soms.datastructures.Frame.from_jsonstring", "api/generated/soms.datastructures.Frame.from_obj", "api/generated/soms.datastructures.Frame.from_point_and_vector", "api/generated/soms.datastructures.Frame.from_point_direction_length", "api/generated/soms.datastructures.Frame.from_step", "api/generated/soms.datastructures.Frame.length", "api/generated/soms.datastructures.Frame.normal_at", "api/generated/soms.datastructures.Frame.offset", "api/generated/soms.datastructures.Frame.point_at", "api/generated/soms.datastructures.Frame.reverse", "api/generated/soms.datastructures.Frame.reversed", "api/generated/soms.datastructures.Frame.rotate", "api/generated/soms.datastructures.Frame.rotated", "api/generated/soms.datastructures.Frame.scale", "api/generated/soms.datastructures.Frame.scaled", "api/generated/soms.datastructures.Frame.sha256", "api/generated/soms.datastructures.Frame.smooth", "api/generated/soms.datastructures.Frame.split", "api/generated/soms.datastructures.Frame.tangent_at", "api/generated/soms.datastructures.Frame.to_json", "api/generated/soms.datastructures.Frame.to_jsonstring", "api/generated/soms.datastructures.Frame.to_obj", "api/generated/soms.datastructures.Frame.to_points", "api/generated/soms.datastructures.Frame.to_polygon", "api/generated/soms.datastructures.Frame.to_polyline", "api/generated/soms.datastructures.Frame.to_step", "api/generated/soms.datastructures.Frame.transform", "api/generated/soms.datastructures.Frame.transformed", "api/generated/soms.datastructures.Frame.translate", "api/generated/soms.datastructures.Frame.translated", "api/generated/soms.datastructures.Frame.trim", "api/generated/soms.datastructures.Frame.validate_data", "api/generated/soms.datastructures.Joint", "api/generated/soms.datastructures.Joint.ToString", "api/generated/soms.datastructures.Joint.compute_aabb", "api/generated/soms.datastructures.Joint.compute_obb", "api/generated/soms.datastructures.Joint.copy", "api/generated/soms.datastructures.Joint.distance_to_line", "api/generated/soms.datastructures.Joint.distance_to_plane", "api/generated/soms.datastructures.Joint.distance_to_point", "api/generated/soms.datastructures.Joint.from_json", "api/generated/soms.datastructures.Joint.from_jsonstring", "api/generated/soms.datastructures.Joint.in_circle", "api/generated/soms.datastructures.Joint.in_convex_polygon", "api/generated/soms.datastructures.Joint.in_polygon", "api/generated/soms.datastructures.Joint.in_polyhedron", "api/generated/soms.datastructures.Joint.in_triangle", "api/generated/soms.datastructures.Joint.on_circle", "api/generated/soms.datastructures.Joint.on_curve", "api/generated/soms.datastructures.Joint.on_line", "api/generated/soms.datastructures.Joint.on_plane", "api/generated/soms.datastructures.Joint.on_polyline", "api/generated/soms.datastructures.Joint.on_segment", "api/generated/soms.datastructures.Joint.rotate", "api/generated/soms.datastructures.Joint.rotated", "api/generated/soms.datastructures.Joint.scale", "api/generated/soms.datastructures.Joint.scaled", "api/generated/soms.datastructures.Joint.sha256", "api/generated/soms.datastructures.Joint.to_json", "api/generated/soms.datastructures.Joint.to_jsonstring", "api/generated/soms.datastructures.Joint.transform", "api/generated/soms.datastructures.Joint.transformed", "api/generated/soms.datastructures.Joint.translate", "api/generated/soms.datastructures.Joint.translated", "api/generated/soms.datastructures.Joint.validate_data", "api/generated/soms.datastructures.Structure", "api/generated/soms.datastructures.Structure.ToString", "api/generated/soms.datastructures.Structure.add_connection", "api/generated/soms.datastructures.Structure.add_part", "api/generated/soms.datastructures.Structure.compute_aabb", "api/generated/soms.datastructures.Structure.compute_obb", "api/generated/soms.datastructures.Structure.connections", "api/generated/soms.datastructures.Structure.copy", "api/generated/soms.datastructures.Structure.delete_connection", "api/generated/soms.datastructures.Structure.delete_part", "api/generated/soms.datastructures.Structure.find", "api/generated/soms.datastructures.Structure.find_by_key", "api/generated/soms.datastructures.Structure.from_json", "api/generated/soms.datastructures.Structure.from_jsonstring", "api/generated/soms.datastructures.Structure.parts", "api/generated/soms.datastructures.Structure.rotate", "api/generated/soms.datastructures.Structure.rotated", "api/generated/soms.datastructures.Structure.scale", "api/generated/soms.datastructures.Structure.scaled", "api/generated/soms.datastructures.Structure.sha256", "api/generated/soms.datastructures.Structure.to_json", "api/generated/soms.datastructures.Structure.to_jsonstring", "api/generated/soms.datastructures.Structure.transform", "api/generated/soms.datastructures.Structure.transform_numpy", "api/generated/soms.datastructures.Structure.transformed", "api/generated/soms.datastructures.Structure.transformed_numpy", "api/generated/soms.datastructures.Structure.translate", "api/generated/soms.datastructures.Structure.translated", "api/generated/soms.datastructures.Structure.validate_data", "api/soms", "api/soms.checks", "api/soms.connectors", "api/soms.datastructures", "examples", "examples/create_etabs", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/generated/soms.datastructures.Area.rst", "api/generated/soms.datastructures.Area.ToString.rst", "api/generated/soms.datastructures.Area.boolean_difference.rst", "api/generated/soms.datastructures.Area.boolean_intersection.rst", "api/generated/soms.datastructures.Area.boolean_symmetric_difference.rst", "api/generated/soms.datastructures.Area.boolean_union.rst", "api/generated/soms.datastructures.Area.compute_aabb.rst", "api/generated/soms.datastructures.Area.compute_obb.rst", "api/generated/soms.datastructures.Area.copy.rst", "api/generated/soms.datastructures.Area.from_json.rst", "api/generated/soms.datastructures.Area.from_jsonstring.rst", "api/generated/soms.datastructures.Area.from_rectangle.rst", "api/generated/soms.datastructures.Area.from_sides_and_radius_xy.rst", "api/generated/soms.datastructures.Area.rotate.rst", "api/generated/soms.datastructures.Area.rotated.rst", "api/generated/soms.datastructures.Area.scale.rst", "api/generated/soms.datastructures.Area.scaled.rst", "api/generated/soms.datastructures.Area.sha256.rst", "api/generated/soms.datastructures.Area.to_brep.rst", "api/generated/soms.datastructures.Area.to_json.rst", "api/generated/soms.datastructures.Area.to_jsonstring.rst", "api/generated/soms.datastructures.Area.to_mesh.rst", "api/generated/soms.datastructures.Area.to_vertices_and_faces.rst", "api/generated/soms.datastructures.Area.transform.rst", "api/generated/soms.datastructures.Area.transformed.rst", "api/generated/soms.datastructures.Area.translate.rst", "api/generated/soms.datastructures.Area.translated.rst", "api/generated/soms.datastructures.Area.validate_data.rst", "api/generated/soms.datastructures.Frame.rst", "api/generated/soms.datastructures.Frame.ToString.rst", "api/generated/soms.datastructures.Frame.aabb.rst", "api/generated/soms.datastructures.Frame.closest_point.rst", "api/generated/soms.datastructures.Frame.compute_aabb.rst", "api/generated/soms.datastructures.Frame.compute_obb.rst", "api/generated/soms.datastructures.Frame.copy.rst", "api/generated/soms.datastructures.Frame.curvature_at.rst", "api/generated/soms.datastructures.Frame.divide_by_count.rst", "api/generated/soms.datastructures.Frame.divide_by_length.rst", "api/generated/soms.datastructures.Frame.fair.rst", "api/generated/soms.datastructures.Frame.frame_at.rst", "api/generated/soms.datastructures.Frame.from_json.rst", "api/generated/soms.datastructures.Frame.from_jsonstring.rst", "api/generated/soms.datastructures.Frame.from_obj.rst", "api/generated/soms.datastructures.Frame.from_point_and_vector.rst", "api/generated/soms.datastructures.Frame.from_point_direction_length.rst", "api/generated/soms.datastructures.Frame.from_step.rst", "api/generated/soms.datastructures.Frame.length.rst", "api/generated/soms.datastructures.Frame.normal_at.rst", "api/generated/soms.datastructures.Frame.offset.rst", "api/generated/soms.datastructures.Frame.point_at.rst", "api/generated/soms.datastructures.Frame.reverse.rst", "api/generated/soms.datastructures.Frame.reversed.rst", "api/generated/soms.datastructures.Frame.rotate.rst", "api/generated/soms.datastructures.Frame.rotated.rst", "api/generated/soms.datastructures.Frame.scale.rst", "api/generated/soms.datastructures.Frame.scaled.rst", "api/generated/soms.datastructures.Frame.sha256.rst", "api/generated/soms.datastructures.Frame.smooth.rst", "api/generated/soms.datastructures.Frame.split.rst", "api/generated/soms.datastructures.Frame.tangent_at.rst", "api/generated/soms.datastructures.Frame.to_json.rst", "api/generated/soms.datastructures.Frame.to_jsonstring.rst", "api/generated/soms.datastructures.Frame.to_obj.rst", "api/generated/soms.datastructures.Frame.to_points.rst", "api/generated/soms.datastructures.Frame.to_polygon.rst", "api/generated/soms.datastructures.Frame.to_polyline.rst", "api/generated/soms.datastructures.Frame.to_step.rst", "api/generated/soms.datastructures.Frame.transform.rst", "api/generated/soms.datastructures.Frame.transformed.rst", "api/generated/soms.datastructures.Frame.translate.rst", "api/generated/soms.datastructures.Frame.translated.rst", "api/generated/soms.datastructures.Frame.trim.rst", "api/generated/soms.datastructures.Frame.validate_data.rst", "api/generated/soms.datastructures.Joint.rst", "api/generated/soms.datastructures.Joint.ToString.rst", "api/generated/soms.datastructures.Joint.compute_aabb.rst", "api/generated/soms.datastructures.Joint.compute_obb.rst", "api/generated/soms.datastructures.Joint.copy.rst", "api/generated/soms.datastructures.Joint.distance_to_line.rst", "api/generated/soms.datastructures.Joint.distance_to_plane.rst", "api/generated/soms.datastructures.Joint.distance_to_point.rst", "api/generated/soms.datastructures.Joint.from_json.rst", "api/generated/soms.datastructures.Joint.from_jsonstring.rst", "api/generated/soms.datastructures.Joint.in_circle.rst", "api/generated/soms.datastructures.Joint.in_convex_polygon.rst", "api/generated/soms.datastructures.Joint.in_polygon.rst", "api/generated/soms.datastructures.Joint.in_polyhedron.rst", "api/generated/soms.datastructures.Joint.in_triangle.rst", "api/generated/soms.datastructures.Joint.on_circle.rst", "api/generated/soms.datastructures.Joint.on_curve.rst", "api/generated/soms.datastructures.Joint.on_line.rst", "api/generated/soms.datastructures.Joint.on_plane.rst", "api/generated/soms.datastructures.Joint.on_polyline.rst", "api/generated/soms.datastructures.Joint.on_segment.rst", "api/generated/soms.datastructures.Joint.rotate.rst", "api/generated/soms.datastructures.Joint.rotated.rst", "api/generated/soms.datastructures.Joint.scale.rst", "api/generated/soms.datastructures.Joint.scaled.rst", "api/generated/soms.datastructures.Joint.sha256.rst", "api/generated/soms.datastructures.Joint.to_json.rst", "api/generated/soms.datastructures.Joint.to_jsonstring.rst", "api/generated/soms.datastructures.Joint.transform.rst", "api/generated/soms.datastructures.Joint.transformed.rst", "api/generated/soms.datastructures.Joint.translate.rst", "api/generated/soms.datastructures.Joint.translated.rst", "api/generated/soms.datastructures.Joint.validate_data.rst", "api/generated/soms.datastructures.Structure.rst", "api/generated/soms.datastructures.Structure.ToString.rst", "api/generated/soms.datastructures.Structure.add_connection.rst", "api/generated/soms.datastructures.Structure.add_part.rst", "api/generated/soms.datastructures.Structure.compute_aabb.rst", "api/generated/soms.datastructures.Structure.compute_obb.rst", "api/generated/soms.datastructures.Structure.connections.rst", "api/generated/soms.datastructures.Structure.copy.rst", "api/generated/soms.datastructures.Structure.delete_connection.rst", "api/generated/soms.datastructures.Structure.delete_part.rst", "api/generated/soms.datastructures.Structure.find.rst", "api/generated/soms.datastructures.Structure.find_by_key.rst", "api/generated/soms.datastructures.Structure.from_json.rst", "api/generated/soms.datastructures.Structure.from_jsonstring.rst", "api/generated/soms.datastructures.Structure.parts.rst", "api/generated/soms.datastructures.Structure.rotate.rst", "api/generated/soms.datastructures.Structure.rotated.rst", "api/generated/soms.datastructures.Structure.scale.rst", "api/generated/soms.datastructures.Structure.scaled.rst", "api/generated/soms.datastructures.Structure.sha256.rst", "api/generated/soms.datastructures.Structure.to_json.rst", "api/generated/soms.datastructures.Structure.to_jsonstring.rst", "api/generated/soms.datastructures.Structure.transform.rst", "api/generated/soms.datastructures.Structure.transform_numpy.rst", "api/generated/soms.datastructures.Structure.transformed.rst", "api/generated/soms.datastructures.Structure.transformed_numpy.rst", "api/generated/soms.datastructures.Structure.translate.rst", "api/generated/soms.datastructures.Structure.translated.rst", "api/generated/soms.datastructures.Structure.validate_data.rst", "api/soms.rst", "api/soms.checks.rst", "api/soms.connectors.rst", "api/soms.datastructures.rst", "examples.rst", "examples/create_etabs.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "Area", "Area.ToString", "Area.boolean_difference", "Area.boolean_intersection", "Area.boolean_symmetric_difference", "Area.boolean_union", "Area.compute_aabb", "Area.compute_obb", "Area.copy", "Area.from_json", "Area.from_jsonstring", "Area.from_rectangle", "Area.from_sides_and_radius_xy", "Area.rotate", "Area.rotated", "Area.scale", "Area.scaled", "Area.sha256", "Area.to_brep", "Area.to_json", "Area.to_jsonstring", "Area.to_mesh", "Area.to_vertices_and_faces", "Area.transform", "Area.transformed", "Area.translate", "Area.translated", "Area.validate_data", "Frame", "Frame.ToString", "Frame.aabb", "Frame.closest_point", "Frame.compute_aabb", "Frame.compute_obb", "Frame.copy", "Frame.curvature_at", "Frame.divide_by_count", "Frame.divide_by_length", "Frame.fair", "Frame.frame_at", "Frame.from_json", "Frame.from_jsonstring", "Frame.from_obj", "Frame.from_point_and_vector", "Frame.from_point_direction_length", "Frame.from_step", "Frame.length", "Frame.normal_at", "Frame.offset", "Frame.point_at", "Frame.reverse", "Frame.reversed", "Frame.rotate", "Frame.rotated", "Frame.scale", "Frame.scaled", "Frame.sha256", "Frame.smooth", "Frame.split", "Frame.tangent_at", "Frame.to_json", "Frame.to_jsonstring", "Frame.to_obj", "Frame.to_points", "Frame.to_polygon", "Frame.to_polyline", "Frame.to_step", "Frame.transform", "Frame.transformed", "Frame.translate", "Frame.translated", "Frame.trim", "Frame.validate_data", "Joint", "Joint.ToString", "Joint.compute_aabb", "Joint.compute_obb", "Joint.copy", "Joint.distance_to_line", "Joint.distance_to_plane", "Joint.distance_to_point", "Joint.from_json", "Joint.from_jsonstring", "Joint.in_circle", "Joint.in_convex_polygon", "Joint.in_polygon", "Joint.in_polyhedron", "Joint.in_triangle", "Joint.on_circle", "Joint.on_curve", "Joint.on_line", "Joint.on_plane", "Joint.on_polyline", "Joint.on_segment", "Joint.rotate", "Joint.rotated", "Joint.scale", "Joint.scaled", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.transform", "Joint.transformed", "Joint.translate", "Joint.translated", "Joint.validate_data", "Structure", "Structure.ToString", "Structure.add_connection", "Structure.add_part", "Structure.compute_aabb", "Structure.compute_obb", "Structure.connections", "Structure.copy", "Structure.delete_connection", "Structure.delete_part", "Structure.find", "Structure.find_by_key", "Structure.from_json", "Structure.from_jsonstring", "Structure.parts", "Structure.rotate", "Structure.rotated", "Structure.scale", "Structure.scaled", "Structure.sha256", "Structure.to_json", "Structure.to_jsonstring", "Structure.transform", "Structure.transform_numpy", "Structure.transformed", "Structure.transformed_numpy", "Structure.translate", "Structure.translated", "Structure.validate_data", "soms", "Code Checks", "Connectors", "Datastructures", "Examples", "Extract Etabs Model", "soms", "Installation", "License", "Tutorial"], "terms": {"som": [0, 1, 29, 74, 107, 141], "code": [0, 136, 142, 143], "check": [0, 85, 87, 136, 142, 143], "datastructur": [0, 1, 18, 22, 29, 57, 74, 99, 107, 109, 110, 111, 112, 115, 116, 117, 118, 121, 122, 124, 126, 131, 132, 133, 134, 136, 142], "connector": [0, 113, 136, 141, 142], "class": [1, 2, 29, 30, 74, 75, 107, 108, 142], "point": [1, 3, 4, 5, 6, 12, 13, 14, 15, 24, 32, 36, 37, 38, 44, 45, 50, 53, 54, 64, 68, 74, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 122, 123], "none": [1, 9, 14, 15, 16, 17, 24, 26, 35, 39, 51, 53, 54, 55, 56, 63, 64, 66, 67, 68, 70, 74, 78, 89, 90, 91, 92, 94, 95, 96, 97, 98, 104, 107, 110, 114, 115, 116, 117, 118, 122, 123, 124, 125, 129, 130, 133], "name": [1, 74, 107, 109, 110, 143], "base": [1, 14, 15, 29, 53, 54, 74, 95, 96, 107, 122, 123, 142, 143], "polygon": [1, 3, 4, 5, 6, 12, 13, 19, 22, 23, 24, 65, 85, 86, 88], "inherit": [1, 29, 74, 107], "method": [1, 2, 29, 30, 74, 75, 85, 87, 107, 108], "convert": [2, 20, 21, 22, 30, 61, 62, 64, 65, 66, 75, 100, 101, 108, 127, 128], "instanc": [2, 10, 11, 30, 41, 42, 75, 82, 83, 108, 119, 120, 141], "string": [2, 11, 21, 30, 42, 62, 75, 83, 101, 108, 120, 128], "thi": [2, 3, 4, 5, 6, 9, 10, 11, 15, 17, 24, 25, 27, 28, 30, 35, 36, 41, 42, 54, 56, 68, 69, 71, 73, 75, 78, 82, 83, 85, 86, 87, 96, 98, 102, 103, 105, 106, 108, 114, 117, 119, 120, 123, 125, 131, 132, 134, 135, 141, 143, 144], "exist": [2, 30, 75, 108], "net": [2, 30, 75, 108], "compat": [2, 30, 75, 108], "when": [2, 30, 75, 108, 117, 143], "us": [2, 18, 25, 26, 27, 28, 30, 57, 64, 66, 67, 69, 70, 71, 73, 75, 99, 103, 104, 105, 106, 108, 126, 129, 130, 131, 132, 133, 134, 135, 142, 143, 144], "ironpython": [2, 30, 75, 108], "implicit": [2, 30, 75, 108], "convers": [2, 30, 75, 108], "usual": [2, 30, 75, 108], "take": [2, 30, 75, 108], "place": [2, 30, 75, 108], "cpython": [2, 30, 75, 108], "kick": [2, 30, 75, 108], "its": [2, 20, 21, 30, 61, 62, 75, 100, 101, 108, 113, 117, 118, 127, 128, 141, 142], "default": [2, 9, 14, 15, 16, 17, 20, 21, 30, 32, 35, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 75, 78, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 108, 110, 114, 122, 123, 124, 125, 127, 128, 143], "print": [2, 20, 21, 30, 61, 62, 75, 100, 101, 108, 127, 128, 141], "self": [2, 30, 75, 108], "gettyp": [2, 30, 75, 108], "fullnam": [2, 30, 75, 108], "similar": [2, 30, 75, 108], "overrid": [2, 30, 75, 108], "object": [2, 9, 10, 11, 20, 21, 22, 28, 30, 35, 41, 42, 61, 62, 73, 75, 78, 82, 83, 100, 101, 106, 108, 114, 119, 120, 127, 128, 135], "fix": [2, 30, 75, 108], "make": [2, 9, 30, 35, 75, 78, 108, 114], "rhino": [2, 30, 75, 108, 142], "grasshopp": [2, 30, 75, 108, 142], "displai": [2, 30, 75, 108], "proper": [2, 30, 75, 108], "represent": [2, 19, 20, 21, 22, 30, 61, 62, 75, 100, 101, 108, 127, 128], "ar": [2, 3, 4, 5, 6, 30, 75, 85, 86, 87, 108, 109, 117, 140, 142, 143], "connect": [2, 30, 75, 108, 109, 115, 144], "panel": [2, 30, 75, 108], "other": [2, 3, 4, 5, 6, 30, 75, 81, 108, 144], "type": [2, 9, 10, 11, 28, 30, 35, 41, 42, 73, 75, 78, 82, 83, 106, 108, 114, 119, 120, 135, 143], "output": [2, 30, 63, 67, 75, 108], "comput": [3, 4, 5, 6, 7, 8, 18, 31, 32, 33, 34, 36, 37, 38, 40, 47, 48, 57, 60, 76, 77, 79, 80, 81, 99, 111, 112, 126], "boolean": [3, 4, 5, 6], "differ": [3, 5], "anoth": [3, 4, 5, 6, 81], "For": [3, 4, 5, 6, 85, 86], "oper": [3, 4, 5, 6], "both": [3, 4, 5, 6], "assum": [3, 4, 5, 6, 85, 86], "lie": [3, 4, 5, 6, 85, 86], "xy": [3, 4, 5, 6, 85, 86], "plane": [3, 4, 5, 6, 80, 84, 85, 86, 87, 92], "therefor": [3, 4, 5, 6, 87], "z": [3, 4, 5, 6, 14, 15, 16, 17, 18, 53, 54, 55, 56, 57, 74, 85, 86, 95, 96, 97, 98, 99, 122, 123, 124, 125, 126], "compon": [3, 4, 5, 6, 142], "defin": [3, 4, 5, 6, 23, 74], "simpli": [3, 4, 5, 6], "ignor": [3, 4, 5, 6, 85, 86], "If": [3, 4, 5, 6, 10, 11, 13, 18, 20, 21, 36, 37, 38, 40, 41, 42, 48, 57, 60, 61, 62, 65, 82, 83, 85, 86, 99, 100, 101, 109, 113, 119, 120, 126, 127, 128, 143], "i": [3, 4, 5, 6, 10, 11, 13, 28, 32, 36, 37, 38, 40, 41, 42, 48, 60, 64, 65, 66, 67, 73, 82, 83, 85, 86, 87, 89, 91, 92, 94, 106, 110, 113, 117, 119, 120, 135, 141, 142, 143, 144], "respon": [3, 4, 5, 6], "user": [3, 4, 5, 6, 85, 86], "transform": [3, 4, 5, 6, 14, 15, 16, 17, 26, 27, 53, 54, 55, 56, 70, 71, 85, 86, 95, 96, 97, 98, 104, 105, 122, 123, 124, 125, 130, 132, 133, 134], "them": [3, 4, 5, 6], "accordingli": [3, 4, 5, 6], "otherwis": [3, 4, 5, 6, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 144], "result": [3, 4, 5, 6, 13, 85, 86, 87], "meaningless": [3, 4, 5, 6, 85, 86, 87], "paramet": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "compa": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 57, 60, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 133, 134, 143], "geometri": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 40, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 111, 112, 122, 123, 125, 133, 134, 141], "The": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 144], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "intersect": 4, "symmetr": 5, "list": [5, 23, 24, 37, 38, 64, 102], "union": 6, "axi": [7, 13, 14, 15, 31, 33, 53, 54, 76, 95, 96, 111, 122, 123], "align": [7, 13, 31, 33, 76, 111], "bound": [7, 8, 31, 33, 34, 76, 77, 111, 112], "box": [7, 8, 31, 33, 34, 76, 77, 111, 112], "orient": [8, 34, 77, 112, 143], "cl": [9, 35, 78, 114], "an": [9, 10, 11, 20, 21, 28, 35, 41, 42, 43, 61, 62, 63, 73, 78, 82, 83, 100, 101, 106, 110, 114, 119, 120, 127, 128, 135, 141, 143, 144], "independ": [9, 35, 78, 114], "data": [9, 10, 11, 18, 20, 21, 28, 35, 41, 42, 57, 61, 62, 73, 78, 82, 83, 99, 100, 101, 106, 113, 114, 119, 120, 126, 127, 128, 129, 130, 131, 132, 135, 142], "option": [9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 32, 35, 37, 38, 47, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 78, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 109, 110, 113, 114, 118, 122, 123, 124, 125, 126, 127, 128], "current": [9, 35, 78, 110, 114, 142], "classmethod": [10, 11, 12, 13, 28, 41, 42, 43, 44, 45, 46, 73, 82, 83, 106, 119, 120, 135], "filepath": [10, 20, 41, 43, 46, 61, 63, 67, 82, 100, 119, 127], "construct": [10, 11, 12, 13, 28, 41, 42, 44, 45, 50, 73, 82, 83, 106, 119, 120, 135], "from": [10, 11, 13, 18, 24, 36, 41, 42, 43, 44, 45, 46, 57, 68, 79, 80, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 99, 102, 109, 116, 119, 120, 126, 141, 144], "json": [10, 11, 20, 21, 41, 42, 61, 62, 82, 83, 100, 101, 119, 120, 127, 128], "file": [10, 20, 41, 43, 46, 61, 63, 67, 82, 100, 119, 127, 143, 144], "str": [10, 11, 18, 20, 21, 41, 42, 43, 46, 57, 61, 62, 63, 67, 82, 83, 99, 100, 101, 109, 110, 113, 117, 118, 119, 120, 126, 127, 128], "path": [10, 20, 41, 43, 46, 61, 63, 67, 82, 100, 119, 127], "contain": [10, 11, 41, 42, 82, 83, 119, 120], "ha": [10, 11, 41, 42, 82, 83, 119, 120], "correct": [10, 11, 41, 42, 82, 83, 119, 120], "schema": [10, 11, 28, 41, 42, 67, 73, 82, 83, 106, 119, 120, 135], "rais": [10, 11, 13, 36, 40, 41, 42, 48, 60, 65, 82, 83, 109, 119, 120], "typeerror": [10, 11, 41, 42, 82, 83, 119, 120], "width": 12, "height": 12, "rectangl": 12, "lower": 12, "left": 12, "corner": 12, "float": [12, 13, 14, 15, 16, 17, 23, 24, 32, 36, 37, 38, 40, 45, 47, 48, 50, 53, 54, 55, 56, 60, 74, 79, 80, 81, 89, 90, 91, 92, 94, 95, 96, 97, 98, 102, 122, 123, 124, 125], "A": [12, 19, 22, 23, 74, 89, 90, 91, 92, 94, 117, 144], "n": [13, 64, 65, 66, 143], "radiu": 13, "number": [13, 37, 64, 65, 66], "side": [13, 65], "planar": [13, 87], "equilater": 13, "equiangular": 13, "int": [13, 23, 37, 64, 65, 66, 109, 110, 113, 118], "circl": [13, 36, 84, 89], "circumscrib": 13, "valueerror": [13, 36, 40, 48, 60, 65], "smaller": 13, "than": [13, 18, 57, 99, 126], "3": [13, 143], "note": [13, 36, 110], "first": 13, "y": [13, 16, 17, 55, 56, 74, 97, 98, 124, 125], "order": 13, "": [13, 28, 73, 106, 135], "counterclockwis": 13, "exampl": [13, 18, 24, 44, 45, 50, 57, 68, 79, 80, 81, 84, 85, 86, 88, 91, 92, 93, 94, 99, 102, 126, 141, 142], "import": [13, 18, 24, 44, 45, 57, 68, 79, 80, 84, 85, 86, 88, 91, 92, 93, 94, 99, 102, 126, 141, 142], "dot_vector": 13, "subtract_vector": 13, "pentagon": 13, "5": [13, 50, 84, 85, 86, 88, 91, 92, 93, 94], "1": [13, 18, 24, 44, 45, 50, 57, 68, 79, 80, 81, 84, 85, 86, 88, 91, 92, 93, 94, 99, 102, 126], "0": [13, 18, 24, 44, 45, 50, 57, 68, 79, 80, 81, 84, 85, 86, 88, 91, 92, 93, 94, 99, 102, 126], "len": [13, 141], "line": [13, 29, 32, 44, 45, 50, 66, 68, 79, 91, 94], "true": [13, 18, 20, 21, 32, 37, 38, 57, 61, 62, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 113, 126, 127, 128], "round": 13, "length": [13, 37, 38, 45], "6": 13, "normal": [13, 36, 48], "centertofirst": 13, "centroid": 13, "angl": [14, 15, 53, 54, 95, 96, 122, 123], "radian": [14, 15, 24, 53, 54, 68, 95, 96, 122, 123], "vector": [14, 15, 26, 27, 36, 44, 45, 48, 53, 54, 60, 70, 71, 80, 84, 92, 95, 96, 104, 105, 122, 123, 133, 134], "origin": [14, 15, 53, 54, 95, 96, 122, 123], "translat": [14, 15, 16, 17, 25, 53, 54, 55, 56, 69, 95, 96, 97, 98, 102, 103, 122, 123, 124, 125], "scale": [14, 15, 25, 26, 27, 53, 54, 69, 70, 71, 95, 96, 103, 104, 105, 122, 123, 133, 134], "copi": [15, 17, 25, 27, 52, 54, 56, 69, 71, 96, 98, 103, 105, 123, 125, 131, 132, 134, 144], "x": [16, 17, 55, 56, 74, 97, 98, 102, 124, 125], "factor": [16, 17, 55, 56, 97, 98, 124, 125], "direct": [16, 17, 45, 55, 56, 97, 98, 124, 125, 143], "rotat": [16, 17, 24, 25, 26, 27, 55, 56, 68, 69, 70, 71, 97, 98, 103, 104, 105, 124, 125, 133, 134], "as_str": [18, 57, 99, 126], "fals": [18, 20, 21, 22, 23, 32, 37, 38, 57, 61, 62, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 113, 126, 127, 128], "hash": [18, 57, 99, 126], "comparison": [18, 57, 99, 126], "dure": [18, 57, 99, 126], "version": [18, 57, 99, 126], "control": [18, 57, 99, 126], "algorithm": [18, 57, 99, 126], "bool": [18, 20, 21, 22, 23, 32, 37, 38, 57, 61, 62, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 113, 126, 127, 128], "digest": [18, 57, 99, 126], "hexadecim": [18, 57, 99, 126], "format": [18, 57, 99, 126], "rather": [18, 57, 99, 126], "byte": [18, 57, 99, 126], "mesh": [18, 22, 57, 99, 126], "from_obj": [18, 57, 99, 126], "get": [18, 57, 99, 126, 142], "face": [18, 23, 57, 87, 99, 126], "obj": [18, 43, 57, 63, 99, 126], "v1": [18, 57, 99, 126], "v2": [18, 57, 99, 126], "vertex_attribut": [18, 57, 99, 126], "vertex_sampl": [18, 57, 99, 126], "v3": [18, 57, 99, 126], "brep": 19, "boundari": 19, "pretti": [20, 21, 61, 62, 100, 101, 127, 128], "nativ": [20, 21, 61, 62, 100, 101, 127, 128, 142], "save": [20, 21, 61, 62, 100, 101, 127, 128], "earclip": [22, 23], "befor": [22, 23], "vertic": [23, 87], "vertex": 23, "locat": [23, 36, 50, 143], "each": 23, "indic": 23, "t": [24, 36, 40, 48, 50, 60, 68, 102, 117, 118], "math": [24, 68], "from_sides_and_radius_xi": 24, "4": 24, "r": [24, 68, 143], "from_axis_and_angl": [24, 68], "45": 24, "707": 24, "000": [24, 44, 45, 68], "valid": [28, 73, 106, 135], "against": [28, 73, 106, 135], "raw": [28, 73, 106, 135], "can": [28, 73, 86, 106, 117, 118, 135, 142], "__from_data__": [28, 73, 106, 135], "ani": [28, 73, 106, 109, 110, 113, 135, 142, 144], "arg": 29, "kwarg": [29, 109, 110], "curv": [31, 36, 37, 38, 40, 43, 46, 47, 48, 51, 52, 60, 63, 64, 65, 66, 67, 90], "return_paramet": 32, "closest": 32, "given": [32, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "onli": [32, 37, 38, 110], "curvatur": 36, "specifi": [36, 38, 50], "center": 36, "oscil": 36, "parallel": 36, "valu": [36, 40, 48, 60, 89, 90, 91, 92, 94, 110], "correspond": [36, 37, 38, 40, 48, 60], "domain": [36, 40, 48, 60, 64, 66], "point_at": [36, 40, 48, 60], "normal_at": [36, 40, 60], "tangent_at": [36, 40, 48, 50], "binormal_at": [36, 40, 48, 60], "frame_at": [36, 48, 60], "count": 37, "return_point": [37, 38], "divid": [37, 38], "specif": [37, 50], "equal": 37, "segment": [37, 38, 66, 94], "divis": [37, 38], "those": [37, 38], "tupl": [37, 38, 64, 66, 109, 113], "discretis": [37, 38, 64, 66], "addit": [37, 38, 110, 113], "divide_by_length": 37, "split": [37, 38], "divide_by_count": 38, "tol": [39, 89, 90, 91, 92, 94], "local": [40, 143], "curvature_at": [40, 48, 60], "load": [43, 46], "start": [44, 45, 142], "from_point_direction_length": 44, "from_point_and_vector": 45, "577": 45, "stp": [46, 67], "precis": 47, "requir": [47, 143], "calcul": 47, "along": 50, "500": 50, "parametris": 51, "tangent": 60, "write": [63, 67], "10": [64, 143], "subset": [64, 66], "which": [64, 66, 110], "case": [64, 66, 85, 110], "entir": [64, 66], "16": [65, 66], "close": 65, "128": 66, "polylin": [66, 87, 93], "ap203": 67, "step": [67, 143], "90": 68, "end": 68, "xyz": 74, "posit": 74, "coordin": [74, 85, 86], "distanc": [79, 80, 81, 89, 90, 91, 92, 94], "b": [81, 109], "determin": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "li": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "insid": [84, 85, 86, 87, 88, 142], "convex": [85, 86, 87], "test": [85, 86, 87], "do": [85, 86, 144], "It": [85, 86], "up": [85, 86], "appli": [85, 86], "necessari": [85, 86], "beforehand": [85, 86], "must": 85, "howev": 85, "inde": 85, "sequenc": [85, 86, 93], "in_polygon": 85, "poli": [85, 86, 93], "concav": 86, "in_convex_polygon": 86, "polyhedron": 87, "verifi": 87, "behind": 87, "all": [87, 144], "triangl": 88, "tri": 88, "toler": [89, 90, 91, 92, 94], "between": [89, 90, 91, 92, 94, 109, 113, 115], "absolut": [89, 91, 92, 94], "2": 93, "matrix": 102, "from_vector": 102, "assembli": [107, 109, 110, 116, 117, 118, 121], "add": [109, 110, 115, 116], "two": [109, 115], "part": [109, 110, 113, 115, 116, 117, 118], "dict": [109, 110, 113], "attribut": [109, 113], "compil": 109, "argument": 109, "node": 109, "identifi": [109, 110, 113, 117, 118], "assemblyerror": 109, "kei": [110, 118], "uniqu": [110, 117], "context": 110, "nest": 110, "mai": 110, "have": 110, "same": 110, "one": 110, "automat": [110, 117], "assign": [110, 117], "integ": 110, "collect": 110, "graph": 110, "iter": 113, "over": 113, "yield": [113, 121], "next": [113, 143], "u": 113, "v": 113, "attr": 113, "edg": 115, "delet": 115, "remov": 116, "guid": [117, 142, 143], "global": 117, "creat": [117, 141], "found": [117, 118], "find": 118, "individu": 121, "follow": [140, 142, 143, 144], "avail": [140, 142], "extract": [140, 142], "etab": [140, 142], "model": [140, 142], "api": [141, 142], "element": 141, "includ": [141, 144], "area": 141, "frame": 141, "joint": 141, "session": 141, "from_inst": 141, "client": 141, "getfram": 141, "getjoint": 141, "getarea": 141, "python": [142, 143], "packag": [142, 143], "structur": 142, "analysi": 142, "design": 142, "develop": 142, "team": 142, "autom": 142, "improv": 142, "facilit": 142, "system": 142, "within": 142, "multiplatform": 142, "environ": 142, "librari": 142, "open": [142, 143], "sourc": [142, 143], "distribut": [142, 144], "offer": 142, "numpi": 142, "like": [142, 143], "function": 142, "perform": 142, "common": 142, "procedur": 142, "eg": 142, "aisc": 142, "nd": 142, "etc": 142, "script": 142, "whether": [142, 144], "standalon": 142, "jupyt": 142, "notebook": 142, "even": 142, "8": 142, "among": 142, "intial": 142, "abl": 142, "export": 142, "standard": 142, "strutur": 142, "engin": 142, "suit": 142, "csi": 142, "sap": 142, "safe": 142, "futur": 142, "through": 142, "command": 142, "templat": 142, "sheet": 142, "well": 142, "further": 142, "interact": 142, "commonli": 142, "To": [142, 143], "instal": 142, "tutori": 142, "page": 142, "documment": 142, "support": 142, "introduct": 142, "refer": 142, "licens": 142, "index": 142, "modul": 142, "basic": 143, "prerequisit": 143, "anaconda": 143, "you": 143, "machin": 143, "go": 143, "after": 143, "conclud": 143, "prompt": 143, "come": 143, "we": 143, "learn": 143, "more": 143, "about": 143, "out": [143, 144], "link": 143, "new": 143, "depend": 143, "git": 143, "termin": 143, "environmen": 143, "c": 143, "forg": 143, "osx": 143, "app": 143, "activ": 143, "most": 143, "wai": 143, "work": 143, "compas_tno": 143, "clone": 143, "repositori": 143, "your": 143, "drive": 143, "equivalend": 143, "download": 143, "unzip": 143, "predetermin": 143, "folder": 143, "store": 143, "suggest": 143, "someth": 143, "window": 143, "navig": 143, "temin": 143, "yourself": 143, "here": 143, "http": 143, "github": 143, "com": 143, "firmwid": 143, "cd": 143, "pip": 143, "txt": 143, "e": 143, "mit": 144, "permiss": 144, "herebi": 144, "grant": 144, "free": 144, "charg": 144, "person": 144, "obtain": 144, "softwar": 144, "associ": 144, "document": 144, "deal": 144, "without": 144, "restrict": 144, "limit": 144, "right": 144, "modifi": 144, "merg": 144, "publish": 144, "sublicens": 144, "sell": 144, "permit": 144, "whom": 144, "furnish": 144, "so": 144, "subject": 144, "condit": 144, "abov": 144, "copyright": 144, "notic": 144, "shall": 144, "substanti": 144, "portion": 144, "THE": 144, "provid": 144, "AS": 144, "warranti": 144, "OF": 144, "kind": 144, "express": 144, "OR": 144, "impli": 144, "BUT": 144, "NOT": 144, "TO": 144, "merchant": 144, "fit": 144, "FOR": 144, "particular": 144, "purpos": 144, "AND": 144, "noninfring": 144, "IN": 144, "NO": 144, "event": 144, "author": 144, "holder": 144, "BE": 144, "liabl": 144, "claim": 144, "damag": 144, "liabil": 144, "action": 144, "contract": 144, "tort": 144, "aris": 144, "WITH": 144}, "objects": {"": [[136, 0, 0, "-", "soms"]], "soms": [[137, 0, 0, "-", "checks"], [139, 0, 0, "-", "datastructures"]], "soms.datastructures": [[1, 1, 1, "", "Area"], [29, 1, 1, "", "Frame"], [74, 1, 1, "", "Joint"], [107, 1, 1, "", "Structure"]], "soms.datastructures.Area": [[2, 2, 1, "", "ToString"], [3, 2, 1, "", "boolean_difference"], [4, 2, 1, "", "boolean_intersection"], [5, 2, 1, "", "boolean_symmetric_difference"], [6, 2, 1, "", "boolean_union"], [7, 2, 1, "", "compute_aabb"], [8, 2, 1, "", "compute_obb"], [9, 2, 1, "", "copy"], [10, 2, 1, "", "from_json"], [11, 2, 1, "", "from_jsonstring"], [12, 2, 1, "", "from_rectangle"], [13, 2, 1, "", "from_sides_and_radius_xy"], [14, 2, 1, "", "rotate"], [15, 2, 1, "", "rotated"], [16, 2, 1, "", "scale"], [17, 2, 1, "", "scaled"], [18, 2, 1, "", "sha256"], [19, 2, 1, "", "to_brep"], [20, 2, 1, "", "to_json"], [21, 2, 1, "", "to_jsonstring"], [22, 2, 1, "", "to_mesh"], [23, 2, 1, "", "to_vertices_and_faces"], [24, 2, 1, "", "transform"], [25, 2, 1, "", "transformed"], [26, 2, 1, "", "translate"], [27, 2, 1, "", "translated"], [28, 2, 1, "", "validate_data"]], "soms.datastructures.Frame": [[30, 2, 1, "", "ToString"], [31, 2, 1, "", "aabb"], [32, 2, 1, "", "closest_point"], [33, 2, 1, "", "compute_aabb"], [34, 2, 1, "", "compute_obb"], [35, 2, 1, "", "copy"], [36, 2, 1, "", "curvature_at"], [37, 2, 1, "", "divide_by_count"], [38, 2, 1, "", "divide_by_length"], [39, 2, 1, "", "fair"], [40, 2, 1, "", "frame_at"], [41, 2, 1, "", "from_json"], [42, 2, 1, "", "from_jsonstring"], [43, 2, 1, "", "from_obj"], [44, 2, 1, "", "from_point_and_vector"], [45, 2, 1, "", "from_point_direction_length"], [46, 2, 1, "", "from_step"], [47, 2, 1, "", "length"], [48, 2, 1, "", "normal_at"], [49, 2, 1, "", "offset"], [50, 2, 1, "", "point_at"], [51, 2, 1, "", "reverse"], [52, 2, 1, "", "reversed"], [53, 2, 1, "", "rotate"], [54, 2, 1, "", "rotated"], [55, 2, 1, "", "scale"], [56, 2, 1, "", "scaled"], [57, 2, 1, "", "sha256"], [58, 2, 1, "", "smooth"], [59, 2, 1, "", "split"], [60, 2, 1, "", "tangent_at"], [61, 2, 1, "", "to_json"], [62, 2, 1, "", "to_jsonstring"], [63, 2, 1, "", "to_obj"], [64, 2, 1, "", "to_points"], [65, 2, 1, "", "to_polygon"], [66, 2, 1, "", "to_polyline"], [67, 2, 1, "", "to_step"], [68, 2, 1, "", "transform"], [69, 2, 1, "", "transformed"], [70, 2, 1, "", "translate"], [71, 2, 1, "", "translated"], [72, 2, 1, "", "trim"], [73, 2, 1, "", "validate_data"]], "soms.datastructures.Joint": [[75, 2, 1, "", "ToString"], [76, 2, 1, "", "compute_aabb"], [77, 2, 1, "", "compute_obb"], [78, 2, 1, "", "copy"], [79, 2, 1, "", "distance_to_line"], [80, 2, 1, "", "distance_to_plane"], [81, 2, 1, "", "distance_to_point"], [82, 2, 1, "", "from_json"], [83, 2, 1, "", "from_jsonstring"], [84, 2, 1, "", "in_circle"], [85, 2, 1, "", "in_convex_polygon"], [86, 2, 1, "", "in_polygon"], [87, 2, 1, "", "in_polyhedron"], [88, 2, 1, "", "in_triangle"], [89, 2, 1, "", "on_circle"], [90, 2, 1, "", "on_curve"], [91, 2, 1, "", "on_line"], [92, 2, 1, "", "on_plane"], [93, 2, 1, "", "on_polyline"], [94, 2, 1, "", "on_segment"], [95, 2, 1, "", "rotate"], [96, 2, 1, "", "rotated"], [97, 2, 1, "", "scale"], [98, 2, 1, "", "scaled"], [99, 2, 1, "", "sha256"], [100, 2, 1, "", "to_json"], [101, 2, 1, "", "to_jsonstring"], [102, 2, 1, "", "transform"], [103, 2, 1, "", "transformed"], [104, 2, 1, "", "translate"], [105, 2, 1, "", "translated"], [106, 2, 1, "", "validate_data"]], "soms.datastructures.Structure": [[108, 2, 1, "", "ToString"], [109, 2, 1, "", "add_connection"], [110, 2, 1, "", "add_part"], [111, 2, 1, "", "compute_aabb"], [112, 2, 1, "", "compute_obb"], [113, 2, 1, "", "connections"], [114, 2, 1, "", "copy"], [115, 2, 1, "", "delete_connection"], [116, 2, 1, "", "delete_part"], [117, 2, 1, "", "find"], [118, 2, 1, "", "find_by_key"], [119, 2, 1, "", "from_json"], [120, 2, 1, "", "from_jsonstring"], [121, 2, 1, "", "parts"], [122, 2, 1, "", "rotate"], [123, 2, 1, "", "rotated"], [124, 2, 1, "", "scale"], [125, 2, 1, "", "scaled"], [126, 2, 1, "", "sha256"], [127, 2, 1, "", "to_json"], [128, 2, 1, "", "to_jsonstring"], [129, 2, 1, "", "transform"], [130, 2, 1, "", "transform_numpy"], [131, 2, 1, "", "transformed"], [132, 2, 1, "", "transformed_numpy"], [133, 2, 1, "", "translate"], [134, 2, 1, "", "translated"], [135, 2, 1, "", "validate_data"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "area": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "tostr": [2, 30, 75, 108], "boolean_differ": 3, "boolean_intersect": 4, "boolean_symmetric_differ": 5, "boolean_union": 6, "compute_aabb": [7, 33, 76, 111], "compute_obb": [8, 34, 77, 112], "copi": [9, 35, 78, 114], "from_json": [10, 41, 82, 119], "from_jsonstr": [11, 42, 83, 120], "from_rectangl": 12, "from_sides_and_radius_xi": 13, "rotat": [14, 15, 53, 54, 95, 96, 122, 123], "scale": [16, 17, 55, 56, 97, 98, 124, 125], "sha256": [18, 57, 99, 126], "to_brep": 19, "to_json": [20, 61, 100, 127], "to_jsonstr": [21, 62, 101, 128], "to_mesh": 22, "to_vertices_and_fac": 23, "transform": [24, 25, 68, 69, 102, 103, 129, 131], "translat": [26, 27, 70, 71, 104, 105, 133, 134], "validate_data": [28, 73, 106, 135], "frame": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "aabb": 31, "closest_point": 32, "curvature_at": 36, "divide_by_count": 37, "divide_by_length": 38, "fair": 39, "frame_at": 40, "from_obj": 43, "from_point_and_vector": 44, "from_point_direction_length": 45, "from_step": 46, "length": 47, "normal_at": 48, "offset": 49, "point_at": 50, "revers": [51, 52], "smooth": 58, "split": 59, "tangent_at": 60, "to_obj": 63, "to_point": 64, "to_polygon": 65, "to_polylin": 66, "to_step": 67, "trim": 72, "joint": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "distance_to_lin": 79, "distance_to_plan": 80, "distance_to_point": 81, "in_circl": 84, "in_convex_polygon": 85, "in_polygon": 86, "in_polyhedron": 87, "in_triangl": 88, "on_circl": 89, "on_curv": 90, "on_lin": 91, "on_plan": 92, "on_polylin": 93, "on_seg": 94, "structur": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "add_connect": 109, "add_part": 110, "connect": 113, "delete_connect": 115, "delete_part": 116, "find": 117, "find_by_kei": 118, "part": 121, "transform_numpi": 130, "transformed_numpi": 132, "som": [136, 139, 142, 143], "code": 137, "check": 137, "connector": 138, "datastructur": 139, "exampl": 140, "extract": 141, "etab": 141, "model": 141, "tabl": 142, "content": 142, "indic": 142, "instal": 143, "creat": 143, "conda": 143, "environ": 143, "licens": 144, "tutori": 145}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Area": [[1, "area"]], "Area.ToString": [[2, "area-tostring"]], "Area.boolean_difference": [[3, "area-boolean-difference"]], "Area.boolean_intersection": [[4, "area-boolean-intersection"]], "Area.boolean_symmetric_difference": [[5, "area-boolean-symmetric-difference"]], "Area.boolean_union": [[6, "area-boolean-union"]], "Area.compute_aabb": [[7, "area-compute-aabb"]], "Area.compute_obb": [[8, "area-compute-obb"]], "Area.copy": [[9, "area-copy"]], "Area.from_json": [[10, "area-from-json"]], "Area.from_jsonstring": [[11, "area-from-jsonstring"]], "Area.from_rectangle": [[12, "area-from-rectangle"]], "Area.from_sides_and_radius_xy": [[13, "area-from-sides-and-radius-xy"]], "Area.rotate": [[14, "area-rotate"]], "Area.rotated": [[15, "area-rotated"]], "Area.scale": [[16, "area-scale"]], "Area.scaled": [[17, "area-scaled"]], "Area.sha256": [[18, "area-sha256"]], "Area.to_brep": [[19, "area-to-brep"]], "Area.to_json": [[20, "area-to-json"]], "Area.to_jsonstring": [[21, "area-to-jsonstring"]], "Area.to_mesh": [[22, "area-to-mesh"]], "Area.to_vertices_and_faces": [[23, "area-to-vertices-and-faces"]], "Area.transform": [[24, "area-transform"]], "Area.transformed": [[25, "area-transformed"]], "Area.translate": [[26, "area-translate"]], "Area.translated": [[27, "area-translated"]], "Area.validate_data": [[28, "area-validate-data"]], "Frame": [[29, "frame"]], "Frame.ToString": [[30, "frame-tostring"]], "Frame.aabb": [[31, "frame-aabb"]], "Frame.closest_point": [[32, "frame-closest-point"]], "Frame.compute_aabb": [[33, "frame-compute-aabb"]], "Frame.compute_obb": [[34, "frame-compute-obb"]], "Frame.copy": [[35, "frame-copy"]], "Frame.curvature_at": [[36, "frame-curvature-at"]], "Frame.divide_by_count": [[37, "frame-divide-by-count"]], "Frame.divide_by_length": [[38, "frame-divide-by-length"]], "Frame.fair": [[39, "frame-fair"]], "Frame.frame_at": [[40, "frame-frame-at"]], "Frame.from_json": [[41, "frame-from-json"]], "Frame.from_jsonstring": [[42, "frame-from-jsonstring"]], "Frame.from_obj": [[43, "frame-from-obj"]], "Frame.from_point_and_vector": [[44, "frame-from-point-and-vector"]], "Frame.from_point_direction_length": [[45, "frame-from-point-direction-length"]], "Frame.from_step": [[46, "frame-from-step"]], "Frame.length": [[47, "frame-length"]], "Frame.normal_at": [[48, "frame-normal-at"]], "Frame.offset": [[49, "frame-offset"]], "Frame.point_at": [[50, "frame-point-at"]], "Frame.reverse": [[51, "frame-reverse"]], "Frame.reversed": [[52, "frame-reversed"]], "Frame.rotate": [[53, "frame-rotate"]], "Frame.rotated": [[54, "frame-rotated"]], "Frame.scale": [[55, "frame-scale"]], "Frame.scaled": [[56, "frame-scaled"]], "Frame.sha256": [[57, "frame-sha256"]], "Frame.smooth": [[58, "frame-smooth"]], "Frame.split": [[59, "frame-split"]], "Frame.tangent_at": [[60, "frame-tangent-at"]], "Frame.to_json": [[61, "frame-to-json"]], "Frame.to_jsonstring": [[62, "frame-to-jsonstring"]], "Frame.to_obj": [[63, "frame-to-obj"]], "Frame.to_points": [[64, "frame-to-points"]], "Frame.to_polygon": [[65, "frame-to-polygon"]], "Frame.to_polyline": [[66, "frame-to-polyline"]], "Frame.to_step": [[67, "frame-to-step"]], "Frame.transform": [[68, "frame-transform"]], "Frame.transformed": [[69, "frame-transformed"]], "Frame.translate": [[70, "frame-translate"]], "Frame.translated": [[71, "frame-translated"]], "Frame.trim": [[72, "frame-trim"]], "Frame.validate_data": [[73, "frame-validate-data"]], "Joint": [[74, "joint"]], "Joint.ToString": [[75, "joint-tostring"]], "Joint.compute_aabb": [[76, "joint-compute-aabb"]], "Joint.compute_obb": [[77, "joint-compute-obb"]], "Joint.copy": [[78, "joint-copy"]], "Joint.distance_to_line": [[79, "joint-distance-to-line"]], "Joint.distance_to_plane": [[80, "joint-distance-to-plane"]], "Joint.distance_to_point": [[81, "joint-distance-to-point"]], "Joint.from_json": [[82, "joint-from-json"]], "Joint.from_jsonstring": [[83, "joint-from-jsonstring"]], "Joint.in_circle": [[84, "joint-in-circle"]], "Joint.in_convex_polygon": [[85, "joint-in-convex-polygon"]], "Joint.in_polygon": [[86, "joint-in-polygon"]], "Joint.in_polyhedron": [[87, "joint-in-polyhedron"]], "Joint.in_triangle": [[88, "joint-in-triangle"]], "Joint.on_circle": [[89, "joint-on-circle"]], "Joint.on_curve": [[90, "joint-on-curve"]], "Joint.on_line": [[91, "joint-on-line"]], "Joint.on_plane": [[92, "joint-on-plane"]], "Joint.on_polyline": [[93, "joint-on-polyline"]], "Joint.on_segment": [[94, "joint-on-segment"]], "Joint.rotate": [[95, "joint-rotate"]], "Joint.rotated": [[96, "joint-rotated"]], "Joint.scale": [[97, "joint-scale"]], "Joint.scaled": [[98, "joint-scaled"]], "Joint.sha256": [[99, "joint-sha256"]], "Joint.to_json": [[100, "joint-to-json"]], "Joint.to_jsonstring": [[101, "joint-to-jsonstring"]], "Joint.transform": [[102, "joint-transform"]], "Joint.transformed": [[103, "joint-transformed"]], "Joint.translate": [[104, "joint-translate"]], "Joint.translated": [[105, "joint-translated"]], "Joint.validate_data": [[106, "joint-validate-data"]], "Structure": [[107, "structure"]], "Structure.ToString": [[108, "structure-tostring"]], "Structure.add_connection": [[109, "structure-add-connection"]], "Structure.add_part": [[110, "structure-add-part"]], "Structure.compute_aabb": [[111, "structure-compute-aabb"]], "Structure.compute_obb": [[112, "structure-compute-obb"]], "Structure.connections": [[113, "structure-connections"]], "Structure.copy": [[114, "structure-copy"]], "Structure.delete_connection": [[115, "structure-delete-connection"]], "Structure.delete_part": [[116, "structure-delete-part"]], "Structure.find": [[117, "structure-find"]], "Structure.find_by_key": [[118, "structure-find-by-key"]], "Structure.from_json": [[119, "structure-from-json"]], "Structure.from_jsonstring": [[120, "structure-from-jsonstring"]], "Structure.parts": [[121, "structure-parts"]], "Structure.rotate": [[122, "structure-rotate"]], "Structure.rotated": [[123, "structure-rotated"]], "Structure.scale": [[124, "structure-scale"]], "Structure.scaled": [[125, "structure-scaled"]], "Structure.sha256": [[126, "structure-sha256"]], "Structure.to_json": [[127, "structure-to-json"]], "Structure.to_jsonstring": [[128, "structure-to-jsonstring"]], "Structure.transform": [[129, "structure-transform"]], "Structure.transform_numpy": [[130, "structure-transform-numpy"]], "Structure.transformed": [[131, "structure-transformed"]], "Structure.transformed_numpy": [[132, "structure-transformed-numpy"]], "Structure.translate": [[133, "structure-translate"]], "Structure.translated": [[134, "structure-translated"]], "Structure.validate_data": [[135, "structure-validate-data"]], "soms": [[136, "module-soms"], [142, "soms"]], "Code Checks": [[137, "module-soms.checks"]], "Connectors": [[138, "connectors"]], "Datastructures": [[139, "module-soms.datastructures"]], "soms.datastructures": [[139, "soms-datastructures"]], "Examples": [[140, "examples"]], "Extract Etabs Model": [[141, "extract-etabs-model"]], "Table of Contents": [[142, "table-of-contents"]], "Indices and tables": [[142, "indices-and-tables"]], "Installation": [[143, "installation"]], "Create a conda environment": [[143, "create-a-conda-environment"]], "Installing soms": [[143, "installing-soms"]], "License": [[144, "license"]], "Tutorial": [[145, "tutorial"]]}, "indexentries": {"area (class in soms.datastructures)": [[1, "soms.datastructures.Area"]], "tostring() (soms.datastructures.area method)": [[2, "soms.datastructures.Area.ToString"]], "boolean_difference() (soms.datastructures.area method)": [[3, "soms.datastructures.Area.boolean_difference"]], "boolean_intersection() (soms.datastructures.area method)": [[4, "soms.datastructures.Area.boolean_intersection"]], "boolean_symmetric_difference() (soms.datastructures.area method)": [[5, "soms.datastructures.Area.boolean_symmetric_difference"]], "boolean_union() (soms.datastructures.area method)": [[6, "soms.datastructures.Area.boolean_union"]], "compute_aabb() (soms.datastructures.area method)": [[7, "soms.datastructures.Area.compute_aabb"]], "compute_obb() (soms.datastructures.area method)": [[8, "soms.datastructures.Area.compute_obb"]], "copy() (soms.datastructures.area method)": [[9, "soms.datastructures.Area.copy"]], "from_json() (soms.datastructures.area class method)": [[10, "soms.datastructures.Area.from_json"]], "from_jsonstring() (soms.datastructures.area class method)": [[11, "soms.datastructures.Area.from_jsonstring"]], "from_rectangle() (soms.datastructures.area class method)": [[12, "soms.datastructures.Area.from_rectangle"]], "from_sides_and_radius_xy() (soms.datastructures.area class method)": [[13, "soms.datastructures.Area.from_sides_and_radius_xy"]], "rotate() (soms.datastructures.area method)": [[14, "soms.datastructures.Area.rotate"]], "rotated() (soms.datastructures.area method)": [[15, "soms.datastructures.Area.rotated"]], "scale() (soms.datastructures.area method)": [[16, "soms.datastructures.Area.scale"]], "scaled() (soms.datastructures.area method)": [[17, "soms.datastructures.Area.scaled"]], "sha256() (soms.datastructures.area method)": [[18, "soms.datastructures.Area.sha256"]], "to_brep() (soms.datastructures.area method)": [[19, "soms.datastructures.Area.to_brep"]], "to_json() (soms.datastructures.area method)": [[20, "soms.datastructures.Area.to_json"]], "to_jsonstring() (soms.datastructures.area method)": [[21, "soms.datastructures.Area.to_jsonstring"]], "to_mesh() (soms.datastructures.area method)": [[22, "soms.datastructures.Area.to_mesh"]], "to_vertices_and_faces() (soms.datastructures.area method)": [[23, "soms.datastructures.Area.to_vertices_and_faces"]], "transform() (soms.datastructures.area method)": [[24, "soms.datastructures.Area.transform"]], "transformed() (soms.datastructures.area method)": [[25, "soms.datastructures.Area.transformed"]], "translate() (soms.datastructures.area method)": [[26, "soms.datastructures.Area.translate"]], "translated() (soms.datastructures.area method)": [[27, "soms.datastructures.Area.translated"]], "validate_data() (soms.datastructures.area class method)": [[28, "soms.datastructures.Area.validate_data"]], "frame (class in soms.datastructures)": [[29, "soms.datastructures.Frame"]], "tostring() (soms.datastructures.frame method)": [[30, "soms.datastructures.Frame.ToString"]], "aabb() (soms.datastructures.frame method)": [[31, "soms.datastructures.Frame.aabb"]], "closest_point() (soms.datastructures.frame method)": [[32, "soms.datastructures.Frame.closest_point"]], "compute_aabb() (soms.datastructures.frame method)": [[33, "soms.datastructures.Frame.compute_aabb"]], "compute_obb() (soms.datastructures.frame method)": [[34, "soms.datastructures.Frame.compute_obb"]], "copy() (soms.datastructures.frame method)": [[35, "soms.datastructures.Frame.copy"]], "curvature_at() (soms.datastructures.frame method)": [[36, "soms.datastructures.Frame.curvature_at"]], "divide_by_count() (soms.datastructures.frame method)": [[37, "soms.datastructures.Frame.divide_by_count"]], "divide_by_length() (soms.datastructures.frame method)": [[38, "soms.datastructures.Frame.divide_by_length"]], "fair() (soms.datastructures.frame method)": [[39, "soms.datastructures.Frame.fair"]], "frame_at() (soms.datastructures.frame method)": [[40, "soms.datastructures.Frame.frame_at"]], "from_json() (soms.datastructures.frame class method)": [[41, "soms.datastructures.Frame.from_json"]], "from_jsonstring() (soms.datastructures.frame class method)": [[42, "soms.datastructures.Frame.from_jsonstring"]], "from_obj() (soms.datastructures.frame class method)": [[43, "soms.datastructures.Frame.from_obj"]], "from_point_and_vector() (soms.datastructures.frame class method)": [[44, "soms.datastructures.Frame.from_point_and_vector"]], "from_point_direction_length() (soms.datastructures.frame class method)": [[45, "soms.datastructures.Frame.from_point_direction_length"]], "from_step() (soms.datastructures.frame class method)": [[46, "soms.datastructures.Frame.from_step"]], "length() (soms.datastructures.frame method)": [[47, "soms.datastructures.Frame.length"]], "normal_at() (soms.datastructures.frame method)": [[48, "soms.datastructures.Frame.normal_at"]], "offset() (soms.datastructures.frame method)": [[49, "soms.datastructures.Frame.offset"]], "point_at() (soms.datastructures.frame method)": [[50, "soms.datastructures.Frame.point_at"]], "reverse() (soms.datastructures.frame method)": [[51, "soms.datastructures.Frame.reverse"]], "reversed() (soms.datastructures.frame method)": [[52, "soms.datastructures.Frame.reversed"]], "rotate() (soms.datastructures.frame method)": [[53, "soms.datastructures.Frame.rotate"]], "rotated() (soms.datastructures.frame method)": [[54, "soms.datastructures.Frame.rotated"]], "scale() (soms.datastructures.frame method)": [[55, "soms.datastructures.Frame.scale"]], "scaled() (soms.datastructures.frame method)": [[56, "soms.datastructures.Frame.scaled"]], "sha256() (soms.datastructures.frame method)": [[57, "soms.datastructures.Frame.sha256"]], "smooth() (soms.datastructures.frame method)": [[58, "soms.datastructures.Frame.smooth"]], "split() (soms.datastructures.frame method)": [[59, "soms.datastructures.Frame.split"]], "tangent_at() (soms.datastructures.frame method)": [[60, "soms.datastructures.Frame.tangent_at"]], "to_json() (soms.datastructures.frame method)": [[61, "soms.datastructures.Frame.to_json"]], "to_jsonstring() (soms.datastructures.frame method)": [[62, "soms.datastructures.Frame.to_jsonstring"]], "to_obj() (soms.datastructures.frame method)": [[63, "soms.datastructures.Frame.to_obj"]], "to_points() (soms.datastructures.frame method)": [[64, "soms.datastructures.Frame.to_points"]], "to_polygon() (soms.datastructures.frame method)": [[65, "soms.datastructures.Frame.to_polygon"]], "to_polyline() (soms.datastructures.frame method)": [[66, "soms.datastructures.Frame.to_polyline"]], "to_step() (soms.datastructures.frame method)": [[67, "soms.datastructures.Frame.to_step"]], "transform() (soms.datastructures.frame method)": [[68, "soms.datastructures.Frame.transform"]], "transformed() (soms.datastructures.frame method)": [[69, "soms.datastructures.Frame.transformed"]], "translate() (soms.datastructures.frame method)": [[70, "soms.datastructures.Frame.translate"]], "translated() (soms.datastructures.frame method)": [[71, "soms.datastructures.Frame.translated"]], "trim() (soms.datastructures.frame method)": [[72, "soms.datastructures.Frame.trim"]], "validate_data() (soms.datastructures.frame class method)": [[73, "soms.datastructures.Frame.validate_data"]], "joint (class in soms.datastructures)": [[74, "soms.datastructures.Joint"]], "tostring() (soms.datastructures.joint method)": [[75, "soms.datastructures.Joint.ToString"]], "compute_aabb() (soms.datastructures.joint method)": [[76, "soms.datastructures.Joint.compute_aabb"]], "compute_obb() (soms.datastructures.joint method)": [[77, "soms.datastructures.Joint.compute_obb"]], "copy() (soms.datastructures.joint method)": [[78, "soms.datastructures.Joint.copy"]], "distance_to_line() (soms.datastructures.joint method)": [[79, "soms.datastructures.Joint.distance_to_line"]], "distance_to_plane() (soms.datastructures.joint method)": [[80, "soms.datastructures.Joint.distance_to_plane"]], "distance_to_point() (soms.datastructures.joint method)": [[81, "soms.datastructures.Joint.distance_to_point"]], "from_json() (soms.datastructures.joint class method)": [[82, "soms.datastructures.Joint.from_json"]], "from_jsonstring() (soms.datastructures.joint class method)": [[83, "soms.datastructures.Joint.from_jsonstring"]], "in_circle() (soms.datastructures.joint method)": [[84, "soms.datastructures.Joint.in_circle"]], "in_convex_polygon() (soms.datastructures.joint method)": [[85, "soms.datastructures.Joint.in_convex_polygon"]], "in_polygon() (soms.datastructures.joint method)": [[86, "soms.datastructures.Joint.in_polygon"]], "in_polyhedron() (soms.datastructures.joint method)": [[87, "soms.datastructures.Joint.in_polyhedron"]], "in_triangle() (soms.datastructures.joint method)": [[88, "soms.datastructures.Joint.in_triangle"]], "on_circle() (soms.datastructures.joint method)": [[89, "soms.datastructures.Joint.on_circle"]], "on_curve() (soms.datastructures.joint method)": [[90, "soms.datastructures.Joint.on_curve"]], "on_line() (soms.datastructures.joint method)": [[91, "soms.datastructures.Joint.on_line"]], "on_plane() (soms.datastructures.joint method)": [[92, "soms.datastructures.Joint.on_plane"]], "on_polyline() (soms.datastructures.joint method)": [[93, "soms.datastructures.Joint.on_polyline"]], "on_segment() (soms.datastructures.joint method)": [[94, "soms.datastructures.Joint.on_segment"]], "rotate() (soms.datastructures.joint method)": [[95, "soms.datastructures.Joint.rotate"]], "rotated() (soms.datastructures.joint method)": [[96, "soms.datastructures.Joint.rotated"]], "scale() (soms.datastructures.joint method)": [[97, "soms.datastructures.Joint.scale"]], "scaled() (soms.datastructures.joint method)": [[98, "soms.datastructures.Joint.scaled"]], "sha256() (soms.datastructures.joint method)": [[99, "soms.datastructures.Joint.sha256"]], "to_json() (soms.datastructures.joint method)": [[100, "soms.datastructures.Joint.to_json"]], "to_jsonstring() (soms.datastructures.joint method)": [[101, "soms.datastructures.Joint.to_jsonstring"]], "transform() (soms.datastructures.joint method)": [[102, "soms.datastructures.Joint.transform"]], "transformed() (soms.datastructures.joint method)": [[103, "soms.datastructures.Joint.transformed"]], "translate() (soms.datastructures.joint method)": [[104, "soms.datastructures.Joint.translate"]], "translated() (soms.datastructures.joint method)": [[105, "soms.datastructures.Joint.translated"]], "validate_data() (soms.datastructures.joint class method)": [[106, "soms.datastructures.Joint.validate_data"]], "structure (class in soms.datastructures)": [[107, "soms.datastructures.Structure"]], "tostring() (soms.datastructures.structure method)": [[108, "soms.datastructures.Structure.ToString"]], "add_connection() (soms.datastructures.structure method)": [[109, "soms.datastructures.Structure.add_connection"]], "add_part() (soms.datastructures.structure method)": [[110, "soms.datastructures.Structure.add_part"]], "compute_aabb() (soms.datastructures.structure method)": [[111, "soms.datastructures.Structure.compute_aabb"]], "compute_obb() (soms.datastructures.structure method)": [[112, "soms.datastructures.Structure.compute_obb"]], "connections() (soms.datastructures.structure method)": [[113, "soms.datastructures.Structure.connections"]], "copy() (soms.datastructures.structure method)": [[114, "soms.datastructures.Structure.copy"]], "delete_connection() (soms.datastructures.structure method)": [[115, "soms.datastructures.Structure.delete_connection"]], "delete_part() (soms.datastructures.structure method)": [[116, "soms.datastructures.Structure.delete_part"]], "find() (soms.datastructures.structure method)": [[117, "soms.datastructures.Structure.find"]], "find_by_key() (soms.datastructures.structure method)": [[118, "soms.datastructures.Structure.find_by_key"]], "from_json() (soms.datastructures.structure class method)": [[119, "soms.datastructures.Structure.from_json"]], "from_jsonstring() (soms.datastructures.structure class method)": [[120, "soms.datastructures.Structure.from_jsonstring"]], "parts() (soms.datastructures.structure method)": [[121, "soms.datastructures.Structure.parts"]], "rotate() (soms.datastructures.structure method)": [[122, "soms.datastructures.Structure.rotate"]], "rotated() (soms.datastructures.structure method)": [[123, "soms.datastructures.Structure.rotated"]], "scale() (soms.datastructures.structure method)": [[124, "soms.datastructures.Structure.scale"]], "scaled() (soms.datastructures.structure method)": [[125, "soms.datastructures.Structure.scaled"]], "sha256() (soms.datastructures.structure method)": [[126, "soms.datastructures.Structure.sha256"]], "to_json() (soms.datastructures.structure method)": [[127, "soms.datastructures.Structure.to_json"]], "to_jsonstring() (soms.datastructures.structure method)": [[128, "soms.datastructures.Structure.to_jsonstring"]], "transform() (soms.datastructures.structure method)": [[129, "soms.datastructures.Structure.transform"]], "transform_numpy() (soms.datastructures.structure method)": [[130, "soms.datastructures.Structure.transform_numpy"]], "transformed() (soms.datastructures.structure method)": [[131, "soms.datastructures.Structure.transformed"]], "transformed_numpy() (soms.datastructures.structure method)": [[132, "soms.datastructures.Structure.transformed_numpy"]], "translate() (soms.datastructures.structure method)": [[133, "soms.datastructures.Structure.translate"]], "translated() (soms.datastructures.structure method)": [[134, "soms.datastructures.Structure.translated"]], "validate_data() (soms.datastructures.structure class method)": [[135, "soms.datastructures.Structure.validate_data"]], "module": [[136, "module-soms"], [137, "module-soms.checks"], [139, "module-soms.datastructures"]], "soms": [[136, "module-soms"]], "soms.checks": [[137, "module-soms.checks"]], "soms.datastructures": [[139, "module-soms.datastructures"]]}})